<?xml version="1.0" encoding="UTF-8"?>

<xwikidoc>
  <web>DisplayerCode</web>
  <name>DisplayerMacros</name>
  <language/>
  <defaultLanguage/>
  <translation>0</translation>
  <parent>DisplayerCode.WebHome</parent>
  <creator>xwiki:XWiki.Admin</creator>
  <author>xwiki:XWiki.Admin</author>
  <customClass/>
  <contentAuthor>xwiki:XWiki.Admin</contentAuthor>
  <creationDate>1399932000000</creationDate>
  <date>1399932000000</date>
  <contentUpdateDate>1399932000000</contentUpdateDate>
  <version>1.1</version>
  <title>DisplayerMacros</title>
  <defaultTemplate/>
  <validationScript/>
  <comment/>
  <minorEdit>false</minorEdit>
  <syntaxId>xwiki/2.1</syntaxId>
  <hidden>false</hidden>
  <content>{{velocity output="false"}}
#* Macro handling the display of a field for an item / item object.
 * 
 *#
#macro(displayItemField $item $itemObject $fieldName)
  #if($fieldName.startsWith('doc.'))#evaluate("${escapetool.d}item.${fieldName.substring(4)}")#else$item.display($fieldName, 'view', $itemObject)#end##
#end

#* Displays a block with the passed sheet from the passed source.
 * 
 * @param $sheet the sheet to use to display this block
 * @param $cssClass extra css class to be added to the block
 * @param $title the title of the block
 * @param $footer the text to display in the footer of the block
 * @param $sourceType the type of source for the items to be displayed in this block. If empty, doclist is assumed. doclist is the only type handled for now
 * @param $source the actual source for the items to be displayed. The interpretation of this param depends on the source type. For a doclist source type, the param is expected to be a list of strings, names of documents to be displayed
 * @param $sourceClass the class of the objects in the documents of the source
 * @param $sourceLimit the max number of items to use from the source, will be used from the beginning
 * @param $fields the fields to be used by the sheet. They can be in the form doc.&lt;property&gt; to use a default document property, or &lt;fieldname&gt; to use a field from the class $sourceClass. 
          The number of fields required depends on the type of block.
 *#
#macro(displayBlock $sheet $cssClass $title $footer $sourceType $source $sourceClass $sourceLimit $fields)
## print the round work of the block
(%class="blockdisplayer $!cssClass"%)(((
  #if("$!title" != '')
    (%class="blocktitle"%)(((==$title==)))
  #end
  ## prepare the documents list in variable $docList
  ## TODO: handle the other types of sources in the future
  #if("$!sourceType" == "doclist" || "$!sourceType" == "")
    ## interpret $source as a list of strings. Responsibility of the caller to make it an actual list
    #set($blockDisplayerDocList = [])
    #foreach ($docName in $source)
      #if($xwiki.exists("$!docName"))
        #set($discard = $blockDisplayerDocList.add($xwiki.getDocument($docName)))
      #end
    #end
  #end
  #set($blockDisplayerDocClass = $sourceClass)
  #set($blockDisplayerFields = $fields)
  (%class="blockcontent"%)((({{html clean="false" wiki="false"}}#includeInContext($sheet){{/html}})))
  ## TODO: should we do something special in this footer to escape syntax etc?
  (%class="blockfooter"%)((($footer)))
)))
#end

#* Displays a block with the passed sheet from the passed source.
 * 
 * @param $sheet the sheet to use to display this block
 * @param $cssClass extra css class to be added to the block
 * @param $title the title of the block
 * @param $footer the text to display in the footer of the block
 * @param $sourceType the type of source for the items to be displayed in this block. If empty, doclist is assumed. doclist is the only type handled for now
 * @param $source the actual source for the items to be displayed. The interpretation of this param depends on the source type. For a doclist source type, the param is expected to be a list of strings, names of documents to be displayed
 * @param $sourceClass the class of the objects in the documents of the source
 * @param $sourceLimit the max number of items to use from the source, will be used from the beginning
 * @param $fields the fields to be used by the sheet. They can be in the form doc.&lt;property&gt; to use a default document property, or &lt;fieldname&gt; to use a field from the class $sourceClass. 
          The number of fields required depends on the type of block.
 * @param $width  the width of the block
 * @param $height the height of the block
 *# 
#macro(displayBlock $sheet $cssClass $title $footer $sourceType $source $sourceClass $sourceLimit $fields  $blocWidth $blocHeight)
## print the round work of the block
(%class="blockdisplayer $!cssClass" style="width:${blocWidth}px;" %)(((
  #if("$!title" != '')
    (%class="blocktitle"%)(((==$title==)))
  #end
  ## prepare the documents list in variable $docList
  ## TODO: handle the other types of sources in the future
  #if("$!sourceType" == "doclist" || "$!sourceType" == "")
    ## interpret $source as a list of strings. Responsibility of the caller to make it an actual list
    #set($blockDisplayerDocList = [])
    #foreach ($docName in $source)
      #if($xwiki.exists("$!docName"))
        #set($discard = $blockDisplayerDocList.add($xwiki.getDocument($docName)))
      #end
    #end
  #end
  #set($blockDisplayerDocClass = $sourceClass)
  #set($blockDisplayerFields = $fields)
  #set($width   = "$!blocWidth")
  #set($height  = "$!blocHeight")
  (%class="blockcontent"%)((({{html clean="false" wiki="false"}}#includeInContext($sheet){{/html}})))
  ## TODO: should we do something special in this footer to escape syntax etc?
  (%class="blockfooter"%)((($footer)))
)))
#end
{{/velocity}}</content>
</xwikidoc>
